{{define "index"}}
<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Bus in Blr</title>
	<link rel="stylesheet" href="/staticweb/js/lib/bootstrap/css/bootstrap.min.css">
	<link rel="stylesheet" href="/staticweb/css/styles.css">
	<link rel="stylesheet" href="/staticweb/js/lib/bootstrap/css/bootstrap-responsive.min.css">
</head>
<body>
	<div class="navbar navbar-inverse navbar-fixed-top">
		<div class="navbar-inner">
			<div class="container">
				<button id="navBarCollapseBtn" type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>

				<!-- <a class="brand" href="#">Bangalore Bus Routes</a> -->
				<div class="brand" style="color: lightseagreen;">Bus in Blr</div>

				<div id="navItemsCollapse" class="nav-collapse collapse">
					<ul class="nav">
						<li id="fromToNavBtn" ><a href="#">From-To</a></li>
						<li id="busNavBtn" ><a href="#">Bus</a></li>
						<li id="stopNavBtn" ><a href="#">Stop</a></li>
						<li id="feedbackNavBtn" ><a href="#">Issue/Feedback</a></li>
						<li id="aboutNavBtn" ><a href="#">About</a></li>
					</ul>
				</div><!--/.nav-collapse -->


			</div>
		</div>
	</div>

	<div id="route-section">
		<div class="container">
			<div class="row">
				<div class="span3">
					<div class="control-group">
						<div class="controls">
							<div class="input-prepend">
								<span class="add-on"><i class="icon-map-marker"></i></span>
								<input class="span2" id="fromStop" type="text" placeholder="type From bus stop" >
							</div>
							<div class="input-prepend">
								<span class="add-on"><i class="icon-flag"></i></span>
								<input class="span2" id="toStop" type="text" placeholder="type To bus stop" >
							</div>
						</div>
					</div>
					<p><a href="#" class="btn btn-large btn-primary" onclick="searchAtoB()">Search &raquo;</a></p>
					<p><button type="button" class="btn" id="reverseFromTo">Reverse From &amp; To</button></p>
					<p><button type="button" class="btn" id="showAsCSList">Comma Separated List</button></p>
					<p><button type="button" class="btn active" id="expandAll">ExpandAll</button></p>
					<p><button type="button" class="btn active" id="showActiveRouteOnly">Show Active Route Only</button></p>
<!-- 					<p><button type="button" class="btn active" data-toggle="button" id="expandAll">ExpandAll</button></p>
					<p><button type="button" class="btn active" data-toggle="button" id="showActiveRouteOnly">Show Active Route Only</button></p>
 -->				</div>

				<div class="span6">
					<div id="search-error" class="alert alert-error"></div>
					<div id="search-alert" class="alert">Found <em><b><span id="search-results-count">NO</span></b></em> <u id="search-results-type">direct</u> route<span id="search-results-plural">s</span>.</div>
					<div id="search-results-list" class=""></div><p>
					<div id="myCarouselWrapper">
						<div id="myCarousel" class="carousel slide">
							<ol class="carousel-indicators">
								<li data-target="#myCarousel" data-slide-to="0" class="active"></li>
								<li data-target="#myCarousel" data-slide-to="1"></li>
								<li data-target="#myCarousel" data-slide-to="2"></li>
							</ol>
							<!-- Carousel items -->
							<div class="carousel-inner">
								<div class="active item">
									<div class="hero-unit">
										<h4 style="color: lightseagreen;">Increased Speed! <small>2013/03/28</small></h4>
										<h2 style="color: lightseagreen;">Faster With Cached Data</h2>
										<p>Upto five recent searches are cached locally to give you instant responses.</p>
										<p>And it works cheaper for you while on the move because your data connection is used less.</p>
										<p>It's already real fast. And <b style="color: lightseagreen">Bus in Blr</b> is becoming <u>faster</u> with simple optimizations.</p>
										<h4 style="color: lightseagreen;">Journey On! Fast!</h4>
									</div>
								</div>
								<div class="item">
									<div class="hero-unit">
										<h4 style="color: lightseagreen;">New UI Features! <small>2013/03/27</small></h4>
										<h2 style="color: lightseagreen;">Show Only Active Route, Expand All</h2>
										<p>With Show Only Active Route, you can avoid seeing the long list of stops that are irrelevant to you.</p>
										<p>Expand All opens out all the routes for you - all you have to do is scroll. Or swipe on your mobile phone, coz that works great too!</p>
										<p><b style="color: lightseagreen">Bus in Blr</b> will continue to improve its <u>fast, convenient usability and use</u>.</p>
										<h4 style="color: lightseagreen;">Journey On!</h4>
									</div>
								</div>
								<div class="item">
									<div class="hero-unit">
										<h4 style="color: lightseagreen;">New Feature! <small>2013/03/26</small></h4>
										<h2 style="color: lightseagreen;">Bus Stop Name Suggestions</h2>
										<p>With Indian <b>names transliterated to English</b>, it is occasionally difficult to guess the correct spelling.  Beyond the name auto-complete in the input boxes, the app will now also suggest possible 'fuzzy' match alternatives.  This could be great for mobile users.</p>
										<p>And it is done entirely locally without using your internet!  So <b style="color: lightseagreen">Bus in Blr</b> will <u>still remain super fast and light on your data connection</u>.</p>
										<h4 style="color: lightseagreen;">Journey On!</h4>
									</div>
								</div>
								<div class="item">
									<div class="hero-unit">
										<h4 style="color: lightseagreen;">I Need Your Help!</h4>
										<h2 style="color: lightseagreen;">Bus Timings Needed</h2>
										<p>To improve your experience of <b style="color: lightseagreen">Bus in Blr</b>, I need the timings for all the bus routes.  So far I have only the Vayu Vajra bus service details from the bmtcinfo.com site.  And very little else.</p>
										<p>If you have access to this data or know somebody personally whom we can reach out to for this data, kindly contact me at sathishvj@gmail.com.</p>
									</div>
								</div>
								<div class="item">
									<div class="hero-unit">
										<h4 style="color: lightseagreen;">Discuss with others!</h4>
										<h2 style="color: lightseagreen;">Join The Community</h2>
										<p>You could get help from others using the same bus services as you, and you could contribute equally in return.</p>
										<p>It will also be a place for developers and other open source contributors to extend the app once I formally make it open sourced.</p>
										<p><a class="btn btn-default btn-large" href="https://groups.google.com/forum/?fromgroups#!forum/bus-in-blr" target="_blank">Go to <b style="color: lightseagreen">Bus in Blr</b> Google Groups</a></p>
									</div>
								</div>
							</div>
							<!-- Carousel nav -->
							<a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
							<a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
						</div>
						<hr>
		        <p class="text-center">created by <a href="http://www.sathishvj.com" target="_blank">sathishvj</a></p>
					</div>

					<div class="accordion" id="accordionDirect" >

					</div>
					<div class="accordion" id="accordion1Hop" >

					</div>
					<div id="suggestedStopNamesWrapper">
						<div id="suggestedStopNames">

						</div>
						<div>
							<hr>
							<span style="font-size: 11px;">Suggestions are automatically generated using the <a href="http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance" target="_blank">Jaro–Winkler distance</a> algorithm implemeted <a href="https://github.com/NaturalNode/natural" target="_blank">here</a>.</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>


	<div id="busnumber-section">
		<div class="container">
			<div class="row">
				<div class="span3">
					<div class="control-group">
						<div class="controls">
							<input class="span2" id="busNumber" type="text" placeholder="type bus number here" >
						</div>
					</div>
					<p><a href="#" class="btn btn-large btn-primary" onclick="searchBusNumber()">Search &raquo;</a></p>
				</div>

				<div class="span6">
					<div id="busnumber-search-error" class="alert alert-error">Bus Number search ... to be changed.</div>
					<div id="busNumberDetails">

					</div>
				</div>
			</div>
		</div>
	</div>


	<div id="feedback-section">
		<div class="container">
			<div class="row">
				<div class="span6">
					<form class="form-horizontal" id="feedbackForm" method="POST" action="/f">
						<fieldset>

							<!-- Hidden Fields -->
							<input type="hidden" id="feedbackOrigin" name="feedbackOrigin" value="#fromToNavBtn"/>

							<!-- Form Name -->

							<!-- Select Basic -->
							<div class="control-group">
								<label class="control-label">Sub Category</label>
								<div class="controls">
									<select id="feedbackSubject" name="feedbackSubject" class="input-xlarge">
										<option>Other</option>
										<option>Wrong stop on route</option>
										<option>Route no longer exists</option>
										<option>New stop to be added on route</option>
										<option>Missing bus number</option>
									</select>
								</div>
							</div>

							<!-- Text input-->
							<div class="control-group">
								<label class="control-label">Bus Number/Stop Name</label>
								<div class="controls">
									<input id="feedbackReference" name="feedbackReference" type="text" placeholder="" class="input-xlarge">
									<p class="help-block"></p>
								</div>
							</div>

							<!-- Textarea -->
							<div class="control-group">
								<label class="control-label">Details</label>
								<div class="controls">
										<textarea id="feedbackDetails" name="feedbackDetails" class="textarea"></textarea>
								</div>
							</div>

							<!-- Text input-->
							<div class="control-group">
								<label class="control-label">(Optional) Email</label>
								<div class="controls">
									<input id="feedbackEmail" name="feedbackEmail" type="text" placeholder="type email here" class="input-xlarge">
									<p class="help-block"></p>
								</div>
							</div>

							<!-- Button (Double) -->
							<div class="control-group">
								<label class="control-label"></label>
								<div class="controls">
									<button id="feedbackSend" name="feedbackSend" class="btn btn-primary">Send Feedback</button>
									<button id="feedbackCancel" name="feedbackCancel" class="btn btn-default">Cancel</button>
								</div>
							</div>

						</fieldset>
					</form>
				</div>
			</div>
		</div>
	</div>

	<div id="about-section">
		<div class="container">

      <!-- Main hero unit for a primary marketing message or call to action -->
      <div class="hero-unit">
        <h2 style="color: lightseagreen;">Bus in Blr</h2>
        <h3 style="color: lightseagreen;">Take the bus!</h3>
        <p>I mostly use the bus service in ಬೆಂಗಳೂರು/Bengaluru/Bangalore.  It's great because it's comfortable, cheaper, I have a lot more time to read, and I can avoid the stress of driving.  Hopefully you will find this site useful for your own journeys here.</p>
      </div>

      <!-- Example row of columns -->
      <div class="row">
        <div class="span4">
          <h2>Thank you!</h2>
          <p>If you are here, thank you for your continued patronage.  If you think the site is useful, kindly spread the word and let others know about it.  The more people we have using the site, it is bound to result in better data accuracy through user feedback.</p>
        </div>
        <div class="span4">
          <h2>Discuss</h2>
          <p>Need more help from the community?  Discuss in our forum at <a href="https://groups.google.com/forum/?fromgroups#!forum/bus-in-blr" target="_blank">Google Groups</a>.</p>
          <p><a class="btn" href="https://groups.google.com/forum/?fromgroups#!forum/bus-in-blr" target="_blank">Go to Bus in Blr Forum</a></p>
       </div>
        <div class="span4">
          <h2>Volunteer</h2>
          <p>To maintain this site and check the accuracy of the data is a time consuming task.  Would you be able to help me improve the data on the site? For now I intend to post in the <a href="https://groups.google.com/forum/?fromgroups#!forum/bus-in-blr" target="_blank">forum</a> with data and feedback that I need validated, verified, and improved.  Please help me on that with your inputs there.</p>
        </div>
      </div>

      <div class="row">
        <div class="span4">
          <h2>Technologies</h2>
          <p><a href="http://golangtutorials.blogspot.fr/2011/05/table-of-contents.html" target="_blank">Go Lang</a>, <a href="https://plus.google.com/communities/116635345018496310983" target="_blank">HTML/CSS</a>, <a href="https://plus.google.com/communities/116635345018496310983" target="_blank">JQuery</a>, <a href="http://twitter.github.com/bootstrap/?v=2.0" target="_blank">Bootstrap</a>, <a href="https://developers.google.com/appengine/" target="_blank">Google AppEngine</a></p>
          <p>Yes, promoting some personally preferred technologies and communities.  :-)</p>
        </div>
        <div class="span4">
          <h2>Data</h2>
          <p>Most of the current data has been obtained from certain forums and scraping some of the data from other sites.  With regular user feedback and updates, I expect the data will grow and continue to be accurate.  It will also be available with the open source code.</p>
       </div>
        <div class="span4">
          <h2>Source Code</h2>
          <p>Even as of now the source code is open.  However, I'll link it from here after I've cleaned up the file structure a bit in anticipation of others also contributing.</p>
        </div>
      </div>
      <hr>

			<div class="row">
				<div class="span12">
					<h3>Release notes</h3>
					<ul>
						<li>
							<h5>Version 0.4, 2013/03/28</h5>
							<ul>
								<li>Saving 5 previous searches to make app real fast.</li>
								<li>Expand All and Show Active Route Only is active/on by default.</li>
								<li>Added note that I'm working on 1-changeover routes when direct route search gives no results.</li>
							</ul>
							<h5>Version 0.3, 2013/03/27</h5>
							<ul>
								<li>Simplified input forms on left by removing labels. Placeholders are good enough. This also reduces used screen real estate on mobiles.</li>
								<li>Added an expand all feature.</li>
								<li>Added a show only active route feature.</li>
							</ul>
							<h5>Version 0.2, 2013/03/26</h5>
							<ul>
								<li>Added stop name suggestions for misspelt names.</li>
								<li>Minor spelling and phrase changes in About page.</li>
								<li>Added a carousel on main page to display banner information.</li>
							</ul>
							<h5>Version 0.1, 2013/03/24</h5>
							<ul>
								<li>First release.</li>
								<li>Allows search by bus number and for direct buses between stops.</li>
								<li>Works great on mobile too with responsive UI.</li>
							</ul>
						</li>
					</ul>
				</div>
			</div>

      <hr>

      <footer>
        <p>created by <a href="http://www.sathishvj.com" target="_blank">sathishvj</a></p>
      </footer>

    </div> <!-- /container -->
	</div>

<script src="/staticweb/js/lib/jquery-1.9.1.min.js"></script>
<script src="/staticweb/js/lib/sprintf-0.7-beta1.js"></script>
<script src="/staticweb/js/lib/bootstrap/js/bootstrap.min.js"></script>
<script src="/staticweb/js/lib/jaro-winkler_distance.js"></script>
<script>
//globally used values
var busStopNames = {{.BusStops}};
var busNumbers = {{.BusNumbers}};

//global setup
$(document).ready(function() {
	$("#fromStop, #toStop").typeahead({
		minLength: 1,
		items: 12,
		source: busStopNames
	});

	$("#busNumber").typeahead({
		minLength: 1,
		items: 12,
		source: busNumbers,
		updater: function(item) {
			$("#busNumber").val(item);
			searchBusNumber();
			return item;
		}
	});

	$('#myCarousel').carousel();

	$("#search-alert, #search-error, #suggestedStopNamesWrapper").hide();
	$("#search-results-list").html("");

	$("#fromStop").val("");
	$("#toStop").val("");

	$("#busnumber-search-error").hide();

	$("#route-section, #busnumber-section, #feedback-section", "#about-section").hide();
	// $("#busnumber-section").show();

	$("#fromToNavBtn, #busNavBtn, #stopNavBtn, #feedbackNavBtn, #aboutNavBtn").click(function(){
		navBtnActivate("#" + this.id);
	});

	navBtnActivate("#fromToNavBtn");

	//for now hide the Stop Nav Btn as there is no functionality
	$("#stopNavBtn").hide();

	$("#showAsCSList, #expandAll, #showActiveRouteOnly").click(function(){
		$(this).button('toggle');
		searchAtoB();
	});

	$("#reverseFromTo").click(function(){
		temp = $("#fromStop").val();
		$("#fromStop").val($("#toStop").val());
		$("#toStop").val(temp);
		searchAtoB();
	});

	$("input[type=text]").click(function() {
		$(this).select();
	});

	$(document).on( 'click', '.suggestedStopName', function(e) {
		// alert("clicked");
		var clickedItem = e.target;
		// alert($(clickedItem).html())
		var inputId = $(clickedItem).hasClass("fromStop")?"#fromStop":"#toStop"; //if fromStop attribute exists
		var otherId = (inputId=="#fromStop")?"#toStop":"#fromStop";

		$(inputId).val($(clickedItem).html());
		if ($(otherId).val().trim() != "") {
			searchAtoB();
		}
	});

});

function navBtnActivate(navBtnId) {
	$('.nav-collapse').collapse("hide");

	if ($(navBtnId).hasClass("active")) {
		return;
	}

	$("#fromToNavBtn, #busNavBtn, #stopNavBtn, #feedbackNavBtn, #aboutNavBtn").removeClass("active");
	$(navBtnId).addClass("active");

	$("#route-section, #busnumber-section, #feedback-section, #about-section").hide();
	switch(navBtnId) {
		case "#fromToNavBtn":
			$("#route-section").show();
		break;
		case "#busNavBtn":
			$("#busnumber-section").show();
		break;
		case "#stopNavBtn":
			alert("To be done!");
		break;
		case "#feedbackNavBtn":
			$("#feedback-section").show();
		break;
		case "#aboutNavBtn":
			$("#about-section").show();
		break;
	}

	//if navbar is on small screen and is in expanded mode, then collapse it
	// if ($("#navItemsCollapse").hasClass("in")) {
		// $("#navBarCollapseBtn").addClass("collapsed");
		// $("#navItemsCollapse").removeClass("in");
	// }
}

// BEGIN - code for route section

function searchAtoB() {
	$("#search-alert, #search-error, #accordionDirect, #accordion1Hop, #suggestedStopNamesWrapper, #myCarouselWrapper").hide();
	$("#search-results-list").html("");

	var from = $("#fromStop").val().trim();
	var to = $("#toStop").val().trim();

	if (from == "") {
		$("#search-error").html("But you have to start from somewhere!").show();
		return;
	}

	if (to == "") {
		$("#search-error").html("But don't you want to get to another place?").show();
		return;
	}

	if (from == to) {
		$("#search-error").html("Yeah, really? You're just going to stand in one place! Or just go in circles!").show();
		return;
	}

	if ($.inArray(from, busStopNames) < 0 ) {
		$("#search-error").html("You can't just make up your own bus stop names! Here are some suggestions for <b>From Bus Stop</b>.").show();
		showStopNameSuggestions("fromStop");
		return;
	}

	if ($.inArray(to, busStopNames) < 0 ) {
		$("#search-error").html("You can't just make up your own bus stop names! Here are some suggestions for <b>To Bus Stop</b>.").show();
		showStopNameSuggestions("toStop");
		return;
	}

	$("#accordionDirect, #accordion1Hop, #search-results-list").html("");

	//first check previous searches
	var prevSearchData = getSavedSearch(from, to);
	if (prevSearchData) {
		showJsonSearchResults(prevSearchData);
		return;
	}

	var url = "/r?from=" + escape(from) + "&to=" + escape(to);
	// alert("Calling url:" + url);


	$.get(url, showSearchResults)
	.error(function(xhr, status, error) {
		$("#search-alert").hide();
		$("#search-error").html("Application error: " + status + "- " + error).show();
	});
}


var savedSearches = new Array();
function saveCurrentSearchResults(fromVal, toVal, jsonData) {
	for (i=0; i<savedSearches.length; i++) {
		var item = savedSearches[i];
		if (item.from == fromVal && item.to == toVal) {
			// console.log("That saved search already exists.");
			return;
		}
	}

	var newSavedSearch = {
		from: fromVal,
		to: toVal,
		data: jsonData,
		time: new Date().getTime()
	}

	if (savedSearches.length == 5) {
		savedSearches.shift();
	}
	savedSearches[savedSearches.length] = newSavedSearch;
	// console.log("Saved search");
}

function getSavedSearch(from, to) {
	for (i=0; i<savedSearches.length; i++) {
		var item = savedSearches[i];
		if (item.from == from && item.to == to) {
			// console.log("Retrieved saved search");
			return item.data; //TODO: this can be better done as an RUL
		}
	}
	return null;
}

function showSearchResults(data) {
		var jsonData = $.parseJSON(data);
		showJsonSearchResults(jsonData);
}

function showJsonSearchResults(jsonData) {
		// var jsonData = $.parseJSON(data);

		// alert("Received: " + len + " items : " + data);
		$("#search-error").hide();
		if (jsonData == null || jsonData.Kind == null || (jsonData.Kind != "direct" && jsonData.Kind != "1hop")){
			$("#search-error").html("Application error! The server seems to have returned error data. This isn't your fault, but ours.  Could you please report the issue and how it happened so that we may work on it?").show();
			//TODO: add an ajax call to automatically report application errors.
			return;
		}

		saveCurrentSearchResults($("#fromStop").val(), $("#toStop").val(), jsonData);

		$("#search-alert").removeClass();
		var len = jsonData.Buses==null?0:jsonData.Buses.length;
		if (len == 0) {
			$("#search-results-count").html("NO valid");
			$("#search-results-type").html("");
			$("#search-results-list").html("This was just from searching direct routes.  I'm currently working on providing routes with 1 changeover - but, I'll be honest with you here, it is taking longer than I expected to make it very usable results and also at high speed.  My apologies for now, but please do try this later by which time I'll get the 1 changeover routes done.  Thank you.");
			$("#search-alert").addClass("alert alert-warning").show();
			return;
		}

		var fromStop = $("#fromStop").val();
		var toStop = $("#toStop").val();
		var showAsCSList = false;
		if ($("#showAsCSList").hasClass("active")) {
			showAsCSList = true;
		}

		var expandAll = false;
		if ($("#expandAll").hasClass("active")) {
			expandAll = true;
		}
		// console.log("ExpandAll in showJsonSearchResults: "+expandAll);

		var showActiveRouteOnly = false;
		if ($("#showActiveRouteOnly").hasClass("active")) {
			showActiveRouteOnly = true;
		}

		if (jsonData.Kind == "direct") {
			$("#search-results-count").html(""+len);
			$("#search-results-type").html("direct");
			$("#search-results-plural").html(len==1?"":"s");
			$("#search-alert").addClass("alert alert-success").show();
			showDirectBuses(jsonData.Buses, fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, jsonData.Kind);
		} else if (jsonData.Kind == "1hop") {
			$("#search-results-count").html(""+(len/2));
			$("#search-results-type").html("one change");
			$("#search-results-plural").html(len/2==1?"":"s");
			$("#search-alert").addClass("alert alert-info").show();
			show1HopBuses(jsonData.Buses, fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, jsonData.Kind);
		} else {
			alert("Application error! Invalid kind: " + jsonData.Kind)
		}

}

var directAccordionString = '<div class="accordion-group">\
						<div class="accordion-heading">\
							<a class="accordion-toggle" data-toggle="collapse" data-target="#collapse%1$d" href="#collapse%1$d">%2$s</a>\
						</div>\
						<div id="collapse%1$d" class="accordion-body collapse %4$s">\
							<div class="accordion-inner">\
								%3$s\
							</div>\
						</div>\
					</div>';

function showDirectBuses(jsonData, fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, kind) {

	$("#search-results-list").html(getNumberListStr(jsonData, kind)).show();

	var len = jsonData.length;
	var autoOpenFirst = (len == 1);
	var fullAccStr = "";
	// var numberListStr = "";
	// console.log("ExpandAll in showDirectBuses: "+expandAll);
	for (i=0; i<len; i++) {
			var busStopsStr = getRouteBusStopsStr(jsonData[i], fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, null);
			fullAccStr += sprintf(directAccordionString, i+1, jsonData[i].Number, busStopsStr, expandAll||autoOpenFirst?"in":"");

		}
		$("#accordionDirect").html(fullAccStr).show();
	}

function getRouteBusStopsStr(busData, fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, allChangePoints) {
	var busStopsStr = "";
	var firstFound = false, secondFound = false;
	for (j=0; j<busData.BusStopsA.length; j++) {
		var value = busData.BusStopsA[j];
		var prefix = "", suffix = "";
		if (value == fromStop ||  value == toStop) {
			if (!firstFound) { firstFound = true; }
			else { secondFound = true; }
			prefix = "<b>";
			suffix = "</b>";
		}
		if ((firstFound && !secondFound) || (secondFound && (value == fromStop || value == toStop))) {
			//for items from firstFound item upto but not including secondFound item
			prefix = "<span style='color: green;'>" + prefix;
			suffix = suffix + "</span>";
		} else if (showActiveRouteOnly) {
			continue;
		} else {
			prefix = "<i>" + prefix;
			suffix = suffix + "</i>";
		}

		if (allChangePoints) {
			var cpLen = allChangePoints.length;
			for (m=0; m<cpLen; m++) {
				var changePoint = allChangePoints[m];
				if (changePoint == value) {
					suffix += " <i class='icon-random'></i>";
				}
				if (changePoint == fromStop || changePoint == toStop) {
					continue;
				} else if (changePoint == value) {
					prefix = "<span style='color:blue;'>" + prefix;
					suffix = suffix + "</span>";
					// console.log(busData.Number);
				}
			}
		}

		if (showAsCSList) {
			if (busStopsStr != "" ) {
				busStopsStr += ", ";
			}
			busStopsStr += prefix + value + suffix;
		} else {
			// busStopsStr += prefix + "<li>" + value + "</li>" + suffix;
			busStopsStr += "<li>" + prefix + value + suffix + "</li>";
		}
	}

	if (showAsCSList) {
	} else {
		busStopsStr = "<ol>" + busStopsStr + "</ol>";
	}
	return busStopsStr;
}

function getNumberListStr(jsonData, kind) {
	var len = jsonData.length;
	var numberListStr = "";
	for (i=0; i<len; i++) {
		if (numberListStr != "") {
			numberListStr += ", ";
		}
		numberListStr += jsonData[i].Number;
		if (kind == "1hop") {
			numberListStr += "-";
			i++;
			numberListStr += jsonData[i].Number;
		}
	}
	// console.log(kind);
	// console.log(numberListStr);
	return numberListStr;
}

var oneHopAccordionString = '<div class="accordion-group">\
						<div class="accordion-heading">\
							<a class="accordion-toggle" data-toggle="collapse" data-target="#collapse%1$d" href="#collapse%1$d">%2$s</a>\
						</div>\
						<div id="collapse%1$d" class="accordion-body collapse %5$s">\
							<div class="accordion-inner">\
								<div class="container">\
									<div class="row">\
										<div class="span3">\
											%3$s\
										</div>\
										<div class="span3">\
											%4$s\
										</div>\
									</div>\
								</div>\
							</div>\
						</div>\
					</div>';

function show1HopBuses(jsonData, fromStop, toStop, showAsCSList, expandAll, showActiveRouteOnly, kind) {

	$("#search-results-list").html(getNumberListStr(jsonData, kind)).show();

	var len = jsonData.length;
	var autoOpenFirst = (len == 1);
	var fullAccStr = "";
	// var numberListStr = "";
	for (i=0; i<len; i++) {
			var originBus = jsonData[i];
			i++;
			var destBus = jsonData[i];

			//find closest stop going down origin bus and up dest bus
			var allChangePoints = new Array();
			for (m=0; m<originBus.BusStopsA.length; m++) {
				for (n=destBus.BusStopsA.length-1; n>=0; n--) {
					if (originBus.BusStopsA[m] == destBus.BusStopsA[n]) {
						allChangePoints[allChangePoints.length] = originBus.BusStopsA[m];
						break;
					}
				}
			}

			var originBusStopsStr = getRouteBusStopsStr(originBus, fromStop, allChangePoints[0], showAsCSList, expandAll, showActiveRouteOnly, allChangePoints);
			var destBusStopsStr = getRouteBusStopsStr(destBus, allChangePoints[0], toStop, showAsCSList, expandAll, showActiveRouteOnly, allChangePoints);

			fullAccStr += sprintf(oneHopAccordionString, i+1, originBus.Number+"-"+destBus.Number, originBusStopsStr, destBusStopsStr, expandAll||autoOpenFirst?"in":"");

		}
		$("#accordion1Hop").html(fullAccStr).show();
	}

	function showStopNameSuggestions(inputId) {
	var stop = $("#" + inputId).val();
	// if (stop.length < 4) {
	// 	return;
	// }

	// var jwArray = new Array();
	var maxSugg = 20;
	var objArray = new Array();
	for (i=0; i<busStopNames.length; i++) {
		var tempStops = busStopNames[i].split("/"); //in case there are different names for the same stop
		for (j=0; j<tempStops.length; j++) {
			var tempStopName = tempStops[j].replace(/ *\([^)]*\) */g, "").trim(); //remove anything within brackets
			if (tempStopName.indexOf(" ") < 0) { //it is a single word
				tempStopName = tempStopName.replace(/ Phase| Stage| Block| Circle| Cross| Gate| Depot| Layout| Colony| Park| Temple| Garden| Complex| Station| College| Engineering| Technology| Dental| Medical| Main| Lake| Bunk| Petrol| Theater| Convent| Center| Stadium| School| High| Town| Board| Point| Bhavan| Bazaar| Tech| 1st| 2nd| 3rd| 4th| 5th| 6th| 7th| 8th| 9th| Sector| Apartment| Junction| East| West| North| South| Institute| Township| Village| Market| Farm | Organization| Bank| Road| Office| Extension| Entrance| Academy| House| Stores| Church| /ig, "").trim(); //remove any Stage, Phase, Block, Circle, Cross, etc. that will give wrong results with the comparison algorithm
			}
			jwd = JaroWinklerDistance(stop, tempStopName);
			//console.log(stop + "," + tempStopName + "," + jwd);
			var obj = {stopName:busStopNames[i], jwDistance: jwd};
			if (objArray.length < maxSugg) { //add first ten elements
				objArray[objArray.length] = obj;
			} else {
				objArray.sort(function(a,b) {return b.jwDistance-a.jwDistance;})
				if (obj.jwDistance > objArray[maxSugg - 1].jwDistance) {
					objArray[maxSugg - 1] = obj;
				}
			}
		}
	}

	var suggHtmlTmpl = '<span style="margin: 2px;"><button class="btn btn-default suggestedStopName %1$s">%2$s</button></span>';
	var fullSuggHtml = "";
	objArray.sort(function(a,b) {return b.jwDistance-a.jwDistance;})
	for (i=0; i<objArray.length; i++) {
		//console.log(stop + "," + objArray[i].stopName + "," + objArray[i].jwDistance);
		fullSuggHtml += sprintf(suggHtmlTmpl, inputId, objArray[i].stopName);
	}

	$("#suggestedStopNames").html(fullSuggHtml);
	$("#suggestedStopNamesWrapper").show();

}

// END - code for route section


// BEGIN - code for bus number section
function searchBusNumber() {
	$("#busnumber-search-error").hide();

	var busNumber = $("#busNumber").val().trim();

	if (busNumber == "") {
		$("#busnumber-search-error").html("You need to give me something to search with!").show();
		return;
	}

	if ($.inArray(busNumber, busNumbers) < 0 ) {
		$("#search-error").html("You can't just make up your own bus! Invalid entry in Bus Number field.").show();
		return;
	}

	var url = "/b?number=" + escape(busNumber);
	// alert("Calling url:" + url);

	$("#busNumberDetails").html("");

	$.get(url, showBusNumberSearchResults)
	.error(function(xhr, status, error) {
		$("#busnumber-search-error").html("Application error: " + status + "- " + error).show();
	});
}

var busNumberHTMLStr = "<div>\
<h3>%1$s</h3>\
<ol>\
%2$s\
</ol>\
</div>\
";

function showBusNumberSearchResults(data) {
	// alert(data);
	var jsonData = $.parseJSON(data);
	var len = 0;
	if (jsonData == null) {
		$("#busnumber-search-error").html("Application error: it is showing up as empty data, but it shouldn't be.  Our fault.").show();
		return;
	}
	$("#busnumber-search-error").hide();

	var fullHTMLStr = "";
	var busNumbersStr = "";
	for (j=0; j<jsonData.BusStopsA.length; j++) {
		var value = jsonData.BusStopsA[j];
		var prefix = "", suffix = "";
		busNumbersStr += "<li>" + value + "</li>";
	}
	fullHTMLStr = sprintf(busNumberHTMLStr, jsonData.Number, busNumbersStr);
	$("#busNumberDetails").html(fullHTMLStr).show();
}
// END - code for bus number section

// BEGIN - code for  feedback section
$("#feedbackSend").click(function(event) {
		// alert("Send clicked");
		$.post("/f", $("#feedbackForm").serialize())
		.done(function(data) {
			alert("Thank you for your feedback!");
			navigateOutOfFeedback();
		})
		.fail(function(data) {
			alert("Error saving feedback: " + data);
		});
		return false;
	});

$("#feedbackCancel").click(function(event) {
	navigateOutOfFeedback();
  return false;
});

function navigateOutOfFeedback() {
	$("#feedbackReference, #feedbackDetails").val("");

	var origin = $("#feedbackOrigin").val();
	if (origin != "" ) {
		navBtnActivate(origin);
	}
}

function navigateToFeedback(origin, category, subcategory, reference) {
	$("#origin").val(origin);
	$("#category").val(category);
	$("#subcategory").val(subcategory);
	$("#reference").val(reference);

	navBtnActivate("#feedbackNavBtn");
}
// END - code for  feedback section

</script>


</body>
</html>
{{end}}